package game.myStrategy.game.resource;import game.myStrategy.lib.math.Vec2D;import javax.imageio.ImageIO;import javax.imageio.ImageReader;import javax.swing.*;import java.awt.*;import java.awt.image.BufferedImage;import java.io.File;import java.io.FileInputStream;import java.io.IOException;public final class ImageLoader {    ImageLoader() {}    public static Image[] loadGif(File file) throws IOException {        ImageReader reader = ImageIO.getImageReadersBySuffix("gif").next();        reader.setInput(ImageIO.createImageInputStream(new FileInputStream(file)), false);        BufferedImage images[] = new BufferedImage[reader.getNumImages(true)];        for (int i = 0; i < images.length; i++) images[i] = reader.read(i);        return images;    }    public static Image load(File file) {        return new ImageIcon(file.getAbsolutePath()).getImage();    }    public static Image resize(Vec2D size, Image image) {        BufferedImage resizeImage = new BufferedImage(size.getIntX(), size.getIntY(), BufferedImage.TYPE_INT_ARGB);        Graphics2D g = resizeImage.createGraphics();        g.drawImage(image, 0, 0, size.getIntX(), size.getIntY(), null);        g.dispose();        return resizeImage;    }    public static Image resize(Vec2D size, String path) {        return resize(size, new ImageIcon(path).getImage());    }}