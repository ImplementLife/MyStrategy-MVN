package game.myStrategy.ui.menu;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import game.myStrategy.ui.FrameController;

import javax.swing.*;
import javax.swing.plaf.FontUIResource;
import javax.swing.text.StyleContext;
import java.awt.*;
import java.util.Locale;

public class GameMenu {
    private JPanel root;
    private JPanel container;

    private JButton btnContinue;
    private JButton btnSave;
    private JButton btnLoad;
    private JButton btnSettings;
    private JButton btnExit;

    public GameMenu(FrameController frameController) {
        btnContinue.addActionListener(e -> {
            frameController.unshodGameMenu();
        });
        btnExit.addActionListener(e -> System.exit(0));


        btnContinue.setFocusable(false);
        btnSave.setFocusable(false);
        btnLoad.setFocusable(false);
        btnSettings.setFocusable(false);
        btnExit.setFocusable(false);


        btnSave.setEnabled(false);
        btnLoad.setEnabled(false);
        btnSettings.setEnabled(false);

    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        root = new JPanel();
        root.setLayout(new GridLayoutManager(3, 3, new Insets(0, 0, 0, 0), -1, -1));
        root.setBackground(new Color(-11053225));
        root.setForeground(new Color(-11053225));
        container = new JPanel();
        container.setLayout(new GridLayoutManager(7, 1, new Insets(0, 0, 0, 0), -1, -1));
        container.setBackground(new Color(-11053225));
        container.setForeground(new Color(-11053225));
        root.add(container, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, new Dimension(542, 241), null, 0, false));
        final JLabel label1 = new JLabel();
        Font label1Font = this.$$$getFont$$$("Source Code Pro", Font.BOLD | Font.ITALIC, 48, label1.getFont());
        if (label1Font != null) label1.setFont(label1Font);
        label1.setForeground(new Color(-5840495));
        label1.setText("IL Strategy");
        container.add(label1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        btnExit = new JButton();
        btnExit.setBackground(new Color(-10461088));
        Font btnExitFont = this.$$$getFont$$$("Courier 10 Pitch", Font.ITALIC, 30, btnExit.getFont());
        if (btnExitFont != null) btnExit.setFont(btnExitFont);
        btnExit.setForeground(new Color(-5987164));
        btnExit.setHideActionText(false);
        btnExit.setText("Вихід");
        btnExit.putClientProperty("hideActionText", Boolean.FALSE);
        btnExit.putClientProperty("html.disable", Boolean.TRUE);
        container.add(btnExit, new GridConstraints(6, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, new Dimension(500, 50), null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        container.add(spacer1, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, new Dimension(-1, 30), null, null, 0, false));
        btnSettings = new JButton();
        btnSettings.setBackground(new Color(-10461088));
        Font btnSettingsFont = this.$$$getFont$$$("Courier 10 Pitch", Font.ITALIC, 30, btnSettings.getFont());
        if (btnSettingsFont != null) btnSettings.setFont(btnSettingsFont);
        btnSettings.setForeground(new Color(-5987164));
        btnSettings.setHideActionText(false);
        btnSettings.setText("Налаштування");
        btnSettings.putClientProperty("hideActionText", Boolean.FALSE);
        btnSettings.putClientProperty("html.disable", Boolean.TRUE);
        container.add(btnSettings, new GridConstraints(5, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, new Dimension(500, 50), null, null, 0, false));
        btnSave = new JButton();
        btnSave.setBackground(new Color(-10461088));
        Font btnSaveFont = this.$$$getFont$$$("Courier 10 Pitch", Font.ITALIC, 30, btnSave.getFont());
        if (btnSaveFont != null) btnSave.setFont(btnSaveFont);
        btnSave.setForeground(new Color(-5987164));
        btnSave.setHideActionText(false);
        btnSave.setText("Збереження");
        btnSave.putClientProperty("hideActionText", Boolean.FALSE);
        btnSave.putClientProperty("html.disable", Boolean.TRUE);
        container.add(btnSave, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, new Dimension(500, 50), null, null, 0, false));
        btnLoad = new JButton();
        btnLoad.setBackground(new Color(-10461088));
        Font btnLoadFont = this.$$$getFont$$$("Courier 10 Pitch", Font.ITALIC, 30, btnLoad.getFont());
        if (btnLoadFont != null) btnLoad.setFont(btnLoadFont);
        btnLoad.setForeground(new Color(-5987164));
        btnLoad.setHideActionText(false);
        btnLoad.setText("Завантажити");
        btnLoad.putClientProperty("hideActionText", Boolean.FALSE);
        btnLoad.putClientProperty("html.disable", Boolean.TRUE);
        container.add(btnLoad, new GridConstraints(4, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, new Dimension(500, 50), null, null, 0, false));
        btnContinue = new JButton();
        btnContinue.setBackground(new Color(-10461088));
        Font btnContinueFont = this.$$$getFont$$$("Courier 10 Pitch", Font.ITALIC, 30, btnContinue.getFont());
        if (btnContinueFont != null) btnContinue.setFont(btnContinueFont);
        btnContinue.setForeground(new Color(-5987164));
        btnContinue.setHideActionText(false);
        btnContinue.setText("Продовжити");
        btnContinue.putClientProperty("hideActionText", Boolean.FALSE);
        btnContinue.putClientProperty("html.disable", Boolean.TRUE);
        container.add(btnContinue, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, new Dimension(500, 50), null, null, 0, false));
        final Spacer spacer2 = new Spacer();
        root.add(spacer2, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        final Spacer spacer3 = new Spacer();
        root.add(spacer3, new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(542, 14), null, 0, false));
        final Spacer spacer4 = new Spacer();
        root.add(spacer4, new GridConstraints(1, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, new Dimension(14, 241), null, 0, false));
        final Spacer spacer5 = new Spacer();
        root.add(spacer5, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, new Dimension(14, 241), null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        Font font = new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
        boolean isMac = System.getProperty("os.name", "").toLowerCase(Locale.ENGLISH).startsWith("mac");
        Font fontWithFallback = isMac ? new Font(font.getFamily(), font.getStyle(), font.getSize()) : new StyleContext().getFont(font.getFamily(), font.getStyle(), font.getSize());
        return fontWithFallback instanceof FontUIResource ? fontWithFallback : new FontUIResource(fontWithFallback);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return root;
    }

    public JPanel getRoot() {
        return root;
    }
}
